name: ARM64 修改kubeadm证书默认年限

on:
  workflow_dispatch:
    inputs:
      k8s_version:
        description: '请填写k8s的版本'
        required: true
        default: '1.18.6'  # 设置默认的 Docker 镜像列表

jobs:
  pull_and_package:
    runs-on: ubuntu-24.04-arm

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: 安装go环境
      run: |
        go version
        # ls && whoami && pwd && wget https://dl.google.com/go/go1.23.4.linux-arm64.tar.gz && tar -xf go1.23.4.linux-arm64.tar.gz && export PATH=$PATH:$(pwd)/go/bin && go version 

    - name: 获取k8s源码
      run: |
        wget https://github.com/kubernetes/kubernetes/archive/refs/tags/v${{ github.event.inputs.k8s_version }}.zip && unzip -q v${{ github.event.inputs.k8s_version }}.zip  && ls
        sed -i 's/24 * 365/24 * 365 * 100/g' ./kubernetes-${{ github.event.inputs.k8s_version }}/cmd/kubeadm/app/constants/constants.go
        sed -i 's/duration365d * 10/duration365d * 100/g' ./kubernetes-${{ github.event.inputs.k8s_version }}/staging/src/k8s.io/client-go/util/cert/cert.go
        sed -ri 's#KUBE_GIT_TREE_STATE="dirty"#KUBE_GIT_TREE_STATE="clean"#g' ./kubernetes-${{ github.event.inputs.k8s_version }}/hack/lib/version.sh
        cd kubernetes-${{ github.event.inputs.k8s_version }}/ && make all WHAT=cmd/kubeadm GOFLAGS=-v && ls _output/local/bin/linux/
        
    - name: List generated files (debug step)
      run: |
         echo "Preparing docker images list (.tar.gz) files:"
         find $GITHUB_WORKSPACE -name "kubeadm"
         release_name=$(TZ="Asia/Shanghai" date +'%Y-%m-%d %H:%M Build')
         echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV

    - name: List generated files (debug step)
      run: |
        echo "Preparing docker images list (.tar.gz) files:"
        find $GITHUB_WORKSPACE -name "kubeadm"
        release_name=$(TZ="Asia/Shanghai" date +'%Y-%m-%d %H:%M Build')
        echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV

    - name: Create GitHub Release
      uses: softprops/action-gh-release@master
      with:
        tag_name: DockerTarBuilder-ARM64
        name: ${{ env.RELEASE_NAME }} for ARM64
        body: |
          [![Github](https://img.shields.io/badge/RELEASE:DockerTarBuilder-123456?logo=github&logoColor=fff&labelColor=green&style=for-the-badge)](https://www.bilibili.com/video/BV1EZ421M7mL) [![Github](https://img.shields.io/badge/国内加速站下载-FC7C0D?logo=github&logoColor=fff&labelColor=000&style=for-the-badge)](https://wkdaily.cpolar.top/archives/1)
          ### How to use? For example
          `docker load -i alpine_latest.tar.gz `
          ### Video teaching
          [![Bilibili](https://img.shields.io/badge/Bilibili-123456?logo=bilibili&logoColor=fff&labelColor=fb7299)](https://www.bilibili.com/video/BV1yyq6YREdF)
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Docker images as release assets
      uses: softprops/action-gh-release@v2.1.0
      with:
        tag_name: DockerTarBuilder-ARM64
        files: ${{ github.workspace }}/kubernetes-${{ github.event.inputs.k8s_version }}/_output/local/bin/linux/arm64/kubeadm
        token: ${{ secrets.GITHUB_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
