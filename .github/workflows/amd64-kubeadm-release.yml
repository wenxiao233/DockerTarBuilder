
name: AMD64 修改kubeadm证书默认年限

on:
  workflow_dispatch:
    inputs:
      k8s_version:
        description: '请填写k8s的版本'
        required: true
        default: '1.18.6'  # 设置默认的 Docker 镜像列表

jobs:
  pull_and_package:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: 安装go环境
      run: |
        go version
        # ls && whoami && pwd && wget https://dl.google.com/go/go1.23.4.linux-arm64.tar.gz && tar -xf go1.23.4.linux-arm64.tar.gz && export PATH=$PATH:$(pwd)/go/bin && go version 

    - name: 获取k8s源码
      run: |
        wget https://github.com/kubernetes/kubernetes/archive/refs/tags/v${{ github.event.inputs.k8s_version }}.zip && unzip -q v${{ github.event.inputs.k8s_version }}.zip  && ls
        sed -i '/CertificateValidity/s/365/365 * 100/g' ./kubernetes-${{ github.event.inputs.k8s_version }}/cmd/kubeadm/app/constants/constants.go
        sed -i '/NotAfter/s/10/100/g' ./kubernetes-${{ github.event.inputs.k8s_version }}/staging/src/k8s.io/client-go/util/cert/cert.go
        sed -ri 's#KUBE_GIT_TREE_STATE="dirty"#KUBE_GIT_TREE_STATE="clean"#g' ./kubernetes-${{ github.event.inputs.k8s_version }}/hack/lib/version.sh
        cd kubernetes-${{ github.event.inputs.k8s_version }}/ && make all WHAT=cmd/kubeadm GOFLAGS=-v > /dev/null && ls _output/local/bin/linux/ && cp _output/local/bin/linux/amd64/kubeadm _output/local/bin/linux/amd64/kubeadm-amd64-v${{ github.event.inputs.k8s_version }}
        
    - name: List generated files (debug step)
      run: |
         echo "Preparing docker images list (.tar.gz) files:"
         find $GITHUB_WORKSPACE -name "kubeadm"
         release_name=$(TZ="Asia/Shanghai" date +'%Y-%m-%d %H:%M Build')
         echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV

    - name: List generated files (debug step)
      run: |
        echo "Preparing docker images list (.tar.gz) files:"
        find $GITHUB_WORKSPACE -name "kubeadm"
        release_name=$(TZ="Asia/Shanghai" date +'%Y-%m-%d %H:%M Build')
        echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV

    - name: Create GitHub Release
      uses: softprops/action-gh-release@master
      with:
        tag_name: kubeadm-100cer
        name: kubeadm-100cer
        body: |
          ```shell
          # 1、将原有证书进行备份
          cp -a /etc/kubernetes/pki /etc/kubernetes/pki_bak
          
          # 2、 将kubeadm 文件拷贝替换系统中原有kubeadm
          cp /usr/bin/kubeadm /usr/bin/kubeadm.bak
          
          # 3、 续订全部证书
          kubeadm certs renew all
          kubeadm alpha certs renew all （1.18.6用这个命令）
          
          # 4、重启kube-apiserver, kube-controller-manager, kube-scheduler、etcd
          docker ps | grep -v pause | grep -E "etcd|scheduler|controller|apiserver" | awk '{print $1}' | awk '{print "docker","restart",$1}' | bash
          
          # 5、查看证书过期时间
          kubeadm certs check-expiration
          kubeadm alpha certs check-expiration
          ```
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Docker images as release assets
      uses: softprops/action-gh-release@v2.1.0
      with:
        tag_name: kubeadm-100cer
        files: ${{ github.workspace }}/kubernetes-${{ github.event.inputs.k8s_version }}/_output/local/bin/linux/amd64/kubeadm-amd64-v${{ github.event.inputs.k8s_version }}
        token: ${{ secrets.GITHUB_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
